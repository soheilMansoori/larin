/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*/
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
    box-sizing: border-box;
    /* 1 */
    border-width: 0;
    /* 2 */
    border-style: solid;
    /* 2 */
    border-color: #e5e7eb;
    /* 2 */
}

::before,
::after {
    --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/
html {
    line-height: 1.5;
    /* 1 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
    -moz-tab-size: 4;
    /* 3 */
    -o-tab-size: 4;
    tab-size: 4;
    /* 3 */
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    /* 4 */
    font-feature-settings: normal;
    /* 5 */
    font-variation-settings: normal;
    /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
    margin: 0;
    /* 1 */
    line-height: inherit;
    /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
    height: 0;
    /* 1 */
    color: inherit;
    /* 2 */
    border-top-width: 1px;
    /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
    color: inherit;
    text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
    font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/*
Add the correct font size in all browsers.
*/
small {
    font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
    text-indent: 0;
    /* 1 */
    border-color: inherit;
    /* 2 */
    border-collapse: collapse;
    /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    /* 1 */
    font-feature-settings: inherit;
    /* 1 */
    font-variation-settings: inherit;
    /* 1 */
    font-size: 100%;
    /* 1 */
    font-weight: inherit;
    /* 1 */
    line-height: inherit;
    /* 1 */
    color: inherit;
    /* 1 */
    margin: 0;
    /* 2 */
    padding: 0;
    /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
    text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
    -webkit-appearance: button;
    /* 1 */
    background-color: transparent;
    /* 2 */
    background-image: none;
    /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
    outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
    box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
    vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
    -webkit-appearance: textfield;
    /* 1 */
    outline-offset: -2px;
    /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
    -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
    -webkit-appearance: button;
    /* 1 */
    font: inherit;
    /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/
summary {
    display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
    margin: 0;
}

fieldset {
    margin: 0;
    padding: 0;
}

legend {
    padding: 0;
}

ol,
ul,
menu {
    list-style: none;
    margin: 0;
    padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
    padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/
textarea {
    resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    /* 1 */
    color: #9ca3af;
    /* 2 */
}

input::placeholder,
textarea::placeholder {
    opacity: 1;
    /* 1 */
    color: #9ca3af;
    /* 2 */
}

/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
    cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
    cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
    display: block;
    /* 1 */
    vertical-align: middle;
    /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
    max-width: 100%;
    height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
    display: none;
}

:root,
[data-theme] {
    background-color: hsl(var(--b1) / var(--tw-bg-opacity, 1));
    color: hsl(var(--bc) / var(--tw-text-opacity, 1));
}

html {
    -webkit-tap-highlight-color: transparent;
}

:root {
    color-scheme: light;
    --pf: 259 94% 44%;
    --sf: 314 100% 40%;
    --af: 174 75% 39%;
    --nf: 214 20% 14%;
    --in: 198 93% 60%;
    --su: 158 64% 52%;
    --wa: 43 96% 56%;
    --er: 0 91% 71%;
    --inc: 198 100% 12%;
    --suc: 158 100% 10%;
    --wac: 43 100% 11%;
    --erc: 0 100% 14%;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-text-case: uppercase;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 259 94% 51%;
    --pc: 259 96% 91%;
    --s: 314 100% 47%;
    --sc: 314 100% 91%;
    --a: 174 75% 46%;
    --ac: 174 75% 11%;
    --n: 214 20% 21%;
    --nc: 212 19% 87%;
    --b1: 0 0% 100%;
    --b2: 0 0% 95%;
    --b3: 180 2% 90%;
    --bc: 215 28% 17%;
}

*,
::before,
::after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
}

.container {
    width: 100%;
}

@media (min-width: 640px) {
    .container {
        max-width: 640px;
    }
}

@media (min-width: 768px) {
    .container {
        max-width: 768px;
    }
}

@media (min-width: 1024px) {
    .container {
        max-width: 1024px;
    }
}

@media (min-width: 1280px) {
    .container {
        max-width: 1280px;
    }
}

@media (min-width: 1536px) {
    .container {
        max-width: 1536px;
    }
}

.avatar {
    position: relative;
    display: inline-flex;
}

.avatar>div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
}

.avatar img {
    height: 100%;
    width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
}

.avatar.placeholder>div {
    display: flex;
    align-items: center;
    justify-content: center;
}

@media (hover:hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: hsl(var(--bc) / var(--tw-text-opacity));
    }

    .menu li>*:not(ul):not(.menu-title):not(details):active,
    .menu li>*:not(ul):not(.menu-title):not(details).active,
    .menu li>details>summary:active {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-text-opacity: 1;
        color: hsl(var(--nc) / var(--tw-text-opacity));
    }
}

.btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-color: transparent;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    text-align: center;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    border-radius: var(--rounded-btn, 0.5rem);
    height: 3rem;
    padding-right: 1rem;
    padding-left: 1rem;
    min-height: 3rem;
    font-size: 0.875rem;
    line-height: 1em;
    gap: 0.5rem;
    font-weight: 600;
    text-decoration-line: none;
    border-width: var(--border-btn, 1px);
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
    text-transform: var(--btn-text-case, uppercase);
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline-color: hsl(var(--bc) / 1);
}

.btn-disabled,
.btn[disabled],
.btn:disabled {
    pointer-events: none;
}

.btn-group>input[type="radio"].btn {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.btn-group>input[type="radio"].btn:before {
    content: attr(data-title);
}

.btn:is(input[type="checkbox"]),
.btn:is(input[type="radio"]) {
    width: auto;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
}

.checkbox {
    flex-shrink: 0;
    --chkbg: var(--bc);
    --chkfg: var(--b1);
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
    border-radius: var(--rounded-btn, 0.5rem);
}

.collapse:not(td):not(tr):not(colgroup) {
    visibility: visible;
}

.collapse {
    position: relative;
    display: grid;
    overflow: hidden;
    grid-template-rows: auto 0fr;
    transition: grid-template-rows 0.2s;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
}

.collapse-title,
.collapse>input[type="checkbox"],
.collapse>input[type="radio"],
.collapse-content {
    grid-column-start: 1;
    grid-row-start: 1;
}

.collapse>input[type="checkbox"],
.collapse>input[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    opacity: 0;
}

.collapse-content {
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0px;
    transition: visibility 0.2s;
    transition: padding 0.2s ease-out,
        background-color 0.2s ease-out;
    padding-right: 1rem;
    padding-left: 1rem;
    cursor: unset;
}

.collapse[open],
.collapse-open,
.collapse:focus:not(.collapse-close) {
    grid-template-rows: auto 1fr;
}

.collapse:not(.collapse-close):has(> input[type="checkbox"]:checked),
.collapse:not(.collapse-close):has(> input[type="radio"]:checked) {
    grid-template-rows: auto 1fr;
}

.collapse[open]>.collapse-content,
.collapse-open>.collapse-content,
.collapse:focus:not(.collapse-close)>.collapse-content,
.collapse:not(.collapse-close)>input[type="checkbox"]:checked~.collapse-content,
.collapse:not(.collapse-close)>input[type="radio"]:checked~.collapse-content {
    visibility: visible;
    min-height: -moz-fit-content;
    min-height: fit-content;
}

.drawer {
    position: relative;
    display: grid;
    grid-auto-columns: max-content auto;
    width: 100%;
}

.drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
}

.drawer-side {
    pointer-events: none;
    position: fixed;
    right: 0px;
    top: 0px;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-y: auto;
    overscroll-behavior: contain;
    height: 100vh;
    height: 100dvh;
    scrollbar-width: none;
}

.drawer-side::-webkit-scrollbar {
    display: none;
}

.drawer-side>.drawer-overlay {
    position: sticky;
    top: 0px;
    place-self: stretch;
    cursor: pointer;
    background-color: transparent;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
}

.drawer-side>* {
    grid-column-start: 1;
    grid-row-start: 1;
}

.drawer-side>*:not(.drawer-overlay) {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 300ms;
    transform: translateX(100%);
}

[dir="rtl"] .drawer-side>*:not(.drawer-overlay) {
    transform: translateX(100%);
}

.drawer-toggle {
    position: fixed;
    height: 0px;
    width: 0px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    opacity: 0;
}

.drawer-toggle:checked~.drawer-side {
    pointer-events: auto;
    visibility: visible;
}

.drawer-toggle:checked~.drawer-side>*:not(.drawer-overlay) {
    transform: translateX(0%);
}

.drawer-end .drawer-toggle~.drawer-content {
    grid-column-start: 1;
}

.drawer-end .drawer-toggle~.drawer-side {
    grid-column-start: 2;
    justify-items: end;
}

.drawer-end .drawer-toggle~.drawer-side>*:not(.drawer-overlay) {
    transform: translateX(-100%);
}

.drawer-end .drawer-toggle:checked~.drawer-side>*:not(.drawer-overlay) {
    transform: translateX(0%);
}

@media (hover: hover) {
    .btn:hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--b3) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    }

    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
    }

    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: hsl(var(--n) / var(--tw-bg-opacity));
        --tw-bg-opacity: 0.2;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        --tw-text-opacity: 0.2;
    }

    .btn:is(input[type="checkbox"]:checked):hover,
    .btn:is(input[type="radio"]:checked):hover {
        --tw-border-opacity: 1;
        border-color: hsl(var(--pf) / var(--tw-border-opacity));
        --tw-bg-opacity: 1;
        background-color: hsl(var(--pf) / var(--tw-bg-opacity));
    }

    :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover,
    :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
        cursor: pointer;
        background-color: hsl(var(--bc) / 0.1);
        --tw-text-opacity: 1;
        color: hsl(var(--bc) / var(--tw-text-opacity));
        outline: 2px solid transparent;
        outline-offset: 2px;
    }
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.footer>* {
    display: grid;
    place-items: start;
    gap: 0.5rem;
}

.footer-center {
    place-items: center;
    text-align: center;
}

.footer-center>* {
    place-items: center;
}

@media (min-width: 48rem) {
    .footer {
        grid-auto-flow: column;
    }

    .footer-center {
        grid-auto-flow: row dense;
    }
}

.form-control {
    display: flex;
    flex-direction: column;
}

.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding-right: 0.25rem;
    padding-left: 0.25rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

.input {
    flex-shrink: 1;
    height: 3rem;
    padding-right: 1rem;
    padding-left: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem);
}

.input-group>.input {
    isolation: isolate;
}

.input-group>*,
.input-group>.input,
.input-group>.textarea,
.input-group>.select {
    border-radius: 0px;
}

.link {
    cursor: pointer;
    text-decoration-line: underline;
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding: 0.5rem;
}

.menu :where(li ul) {
    position: relative;
    white-space: nowrap;
    margin-right: 1rem;
    padding-right: 0.5rem;
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

.menu li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: hsl(var(--bc) / 0.3);
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
}

:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
}

:where(.menu li) .badge {
    justify-self: end;
}

.radio {
    flex-shrink: 0;
    --chkbg: var(--bc);
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: 9999px;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0.2;
}

.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer;
}

.swap>* {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity;
}

.swap input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate~.swap-on {
    opacity: 0;
}

.swap input:checked~.swap-off,
.swap-active .swap-off,
.swap input:indeterminate~.swap-off {
    opacity: 0;
}

.swap input:checked~.swap-on,
.swap-active .swap-on,
.swap input:indeterminate~.swap-indeterminate {
    opacity: 1;
}

.textarea {
    flex-shrink: 1;
    min-height: 3rem;
    padding-right: 1rem;
    padding-left: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-width: 1px;
    border-color: hsl(var(--bc) / var(--tw-border-opacity));
    --tw-border-opacity: 0;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b1) / var(--tw-bg-opacity));
    border-radius: var(--rounded-btn, 0.5rem);
}

.avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b1) / var(--tw-border-opacity));
}

.btm-nav>* .label {
    font-size: 1rem;
    line-height: 1.5rem;
}

.btn:active:hover,
.btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
}

.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}

.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor;
}

.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
}

.btn.btn-disabled,
.btn[disabled],
.btn:disabled {
    --tw-border-opacity: 0;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-bg-opacity: 0.2;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    --tw-text-opacity: 0.2;
}

.btn-group>input[type="radio"]:checked.btn,
.btn-group>.btn-active {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}

.btn-group>input[type="radio"]:checked.btn:focus-visible,
.btn-group>.btn-active:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-color: hsl(var(--p) / 1);
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
    --tw-border-opacity: 1;
    border-color: hsl(var(--p) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--p) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--pc) / var(--tw-text-opacity));
}

.btn:is(input[type="checkbox"]:checked):focus-visible,
.btn:is(input[type="radio"]:checked):focus-visible {
    outline-color: hsl(var(--p) / 1);
}

@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, 0.98));
    }

    40% {
        transform: scale(1.02);
    }

    100% {
        transform: scale(1);
    }
}

.checkbox:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1);
}

.checkbox:checked,
.checkbox[checked="true"],
.checkbox[aria-checked="true"] {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
        linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
        linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
        linear-gradient(-45deg,
            hsl(var(--chkbg)) 30%,
            hsl(var(--chkfg)) 30.99%,
            hsl(var(--chkfg)) 40%,
            transparent 40.99%),
        linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}

.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
        linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%),
        linear-gradient(0deg,
            hsl(var(--chkbg)) 43%,
            hsl(var(--chkfg)) 43%,
            hsl(var(--chkfg)) 57%,
            hsl(var(--chkbg)) 57%);
}

.checkbox:disabled {
    cursor: not-allowed;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    opacity: 0.2;
}

@keyframes checkmark {
    0% {
        background-position-y: 5px;
    }

    50% {
        background-position-y: -2px;
    }

    100% {
        background-position-y: 0;
    }
}

[dir="rtl"] .checkbox:checked,
[dir="rtl"] .checkbox[checked="true"],
[dir="rtl"] .checkbox[aria-checked="true"] {
    background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
        linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
        linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
        linear-gradient(45deg,
            hsl(var(--chkbg)) 30%,
            hsl(var(--chkfg)) 30.99%,
            hsl(var(--chkfg)) 40%,
            transparent 40.99%),
        linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}

details.collapse {
    width: 100%;
}

details.collapse summary {
    position: relative;
    display: block;
    outline: 2px solid transparent;
    outline-offset: 2px;
}

details.collapse summary::-webkit-details-marker {
    display: none;
}

.collapse:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1);
}

.collapse:has(.collapse-title:focus-visible),
.collapse:has(> input[type="checkbox"]:focus-visible),
.collapse:has(> input[type="radio"]:focus-visible) {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1);
}

.collapse-arrow>.collapse-title:after {
    position: absolute;
    display: block;
    height: 0.5rem;
    width: 0.5rem;
    --tw-translate-y: -100%;
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 150ms;
    transition-duration: 0.2s;
    top: 50%;
    left: 1.4rem;
    content: "";
    transform-origin: 25% 75%;
    box-shadow: -2px 2px;
    pointer-events: none;
}

[dir="rtl"] .collapse-arrow>.collapse-title:after {
    --tw-rotate: -45deg;
}

.collapse-plus>.collapse-title:after {
    position: absolute;
    display: block;
    height: 0.5rem;
    width: 0.5rem;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 300ms;
    top: 0.9rem;
    left: 1.4rem;
    content: "+";
    pointer-events: none;
}

.collapse:not(.collapse-open):not(.collapse-close)>input[type="checkbox"],
.collapse:not(.collapse-open):not(.collapse-close)>input[type="radio"]:not(:checked),
.collapse:not(.collapse-open):not(.collapse-close)>.collapse-title {
    cursor: pointer;
}

.collapse:focus:not(.collapse-open):not(.collapse-close):not(.collapse[open])>.collapse-title {
    cursor: unset;
}

.collapse-title {
    position: relative;
}

:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
    z-index: 1;
}

.collapse-title,
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
    width: 100%;
    padding: 1rem;
    padding-left: 3rem;
    min-height: 3.75rem;
    transition: background-color 0.2s ease-out;
}

.collapse[open]> :where(.collapse-content),
.collapse-open> :where(.collapse-content),
.collapse:focus:not(.collapse-close)> :where(.collapse-content),
.collapse:not(.collapse-close)> :where(input[type="checkbox"]:checked ~ .collapse-content),
.collapse:not(.collapse-close)> :where(input[type="radio"]:checked ~ .collapse-content) {
    padding-bottom: 1rem;
    transition: padding 0.2s ease-out,
        background-color 0.2s ease-out;
}

.collapse[open].collapse-arrow>.collapse-title:after,
.collapse-open.collapse-arrow>.collapse-title:after,
.collapse-arrow:focus:not(.collapse-close)>.collapse-title:after,
.collapse-arrow:not(.collapse-close)>input[type="checkbox"]:checked~.collapse-title:after,
.collapse-arrow:not(.collapse-close)>input[type="radio"]:checked~.collapse-title:after {
    --tw-translate-y: -50%;
    --tw-rotate: 225deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

[dir="rtl"] .collapse[open].collapse-arrow>.collapse-title:after,
[dir="rtl"] .collapse-open.collapse-arrow>.collapse-title:after,
[dir="rtl"] .collapse-arrow:focus:not(.collapse-close) .collapse-title:after,
[dir="rtl"] .collapse-arrow:not(.collapse-close) input[type="checkbox"]:checked~.collapse-title:after {
    --tw-rotate: 135deg;
}

.collapse[open].collapse-plus>.collapse-title:after,
.collapse-open.collapse-plus>.collapse-title:after,
.collapse-plus:focus:not(.collapse-close)>.collapse-title:after,
.collapse-plus:not(.collapse-close)>input[type="checkbox"]:checked~.collapse-title:after,
.collapse-plus:not(.collapse-close)>input[type="radio"]:checked~.collapse-title:after {
    content: "ā’";
}

.drawer-toggle:checked~.drawer-side>.drawer-overlay {
    background-color: hsl(0 0% 0%/0.4);
}

.drawer-toggle:focus-visible~.drawer-content label.drawer-button {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}

.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
}

.input:focus,
.input:focus-within {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2);
}

.input-disabled,
.input:disabled,
.input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}

.input-disabled::-moz-placeholder,
.input:disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}

.input-disabled::placeholder,
.input:disabled::placeholder,
.input[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}

.loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: 1.5rem;
    background-color: currentColor;
    -webkit-mask-size: 100%;
    mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

:where(.menu li:empty) {
    background-color: hsl(var(--bc) / 0.1);
    margin: 0.5rem 1rem;
    height: 1px;
}

.menu :where(li ul):before {
    position: absolute;
    bottom: 0.75rem;
    right: 0px;
    top: 0.75rem;
    width: 1px;
    background-color: hsl(var(--bc) / 0.1);
    content: "";
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    padding-right: 1rem;
    padding-left: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    text-align: right;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms;
    border-radius: var(--rounded-btn, 0.5rem);
    text-wrap: balance;
}

:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active).focus,
:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active):focus,
:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):is(summary):not(.active):focus-visible,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active).focus,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active):focus,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(summary):not(.active):focus-visible {
    cursor: pointer;
    background-color: hsl(var(--bc) / 0.1);
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.menu li>*:not(ul):not(.menu-title):not(details):active,
.menu li>*:not(ul):not(.menu-title):not(details).active,
.menu li>details>summary:active {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--n) / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: hsl(var(--nc) / var(--tw-text-opacity));
}

.menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
}

.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
    justify-self: end;
    display: block;
    margin-top: -0.5rem;
    height: 0.5rem;
    width: 0.5rem;
    transform: rotate(-45deg);
    transition-property: transform, margin-top;
    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    content: "";
    transform-origin: 25% 75%;
    box-shadow: -2px 2px;
    pointer-events: none;
}

.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    transform: rotate(-225deg);
    margin-top: 0;
}

.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-right: auto;
    margin-left: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    padding-right: 2rem;
}

.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    right: 0.5rem;
    top: 50%;
    aspect-ratio: 1 / 1;
    height: 0.75rem;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor;
    opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .input:after {
    content: "";
    position: absolute;
    right: 1.25rem;
    top: 50%;
    height: 0.5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor;
    opacity: 0.6;
}

@keyframes modal-pop {
    0% {
        opacity: 0;
    }
}

@keyframes progress-loading {
    50% {
        background-position-x: 215%;
    }
}

.radio:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 1);
}

.radio:checked,
.radio[aria-checked="true"] {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--bc) / var(--tw-bg-opacity));
    animation: radiomark var(--animation-input, 0.2s) ease-out;
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset,
        0 0 0 4px hsl(var(--b1)) inset;
}

.radio:disabled {
    cursor: not-allowed;
    opacity: 0.2;
}

@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 12px hsl(var(--b1)) inset,
            0 0 0 12px hsl(var(--b1)) inset;
    }

    50% {
        box-shadow: 0 0 0 3px hsl(var(--b1)) inset,
            0 0 0 3px hsl(var(--b1)) inset;
    }

    100% {
        box-shadow: 0 0 0 4px hsl(var(--b1)) inset,
            0 0 0 4px hsl(var(--b1)) inset;
    }
}

@keyframes rating-pop {
    0% {
        transform: translateY(-0.125em);
    }

    40% {
        transform: translateY(-0.125em);
    }

    100% {
        transform: translateY(0);
    }
}

.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate~.swap-on {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked~.swap-off,
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:indeterminate~.swap-off {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked~.swap-on,
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:indeterminate~.swap-indeterminate {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate~.swap-on {
    transform: rotateY(-180deg);
    backface-visibility: hidden;
    opacity: 1;
}

.swap-flip input:checked~.swap-off,
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:indeterminate~.swap-off {
    transform: rotateY(180deg);
    backface-visibility: hidden;
    opacity: 1;
}

.swap-flip input:checked~.swap-on,
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:indeterminate~.swap-indeterminate {
    transform: rotateY(0deg);
}

.textarea-bordered {
    --tw-border-opacity: 0.2;
}

.textarea:focus {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(var(--bc) / 0.2);
}

.textarea-disabled,
.textarea:disabled,
.textarea[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: hsl(var(--b2) / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
    --tw-text-opacity: 0.2;
}

.textarea-disabled::-moz-placeholder,
.textarea:disabled::-moz-placeholder,
.textarea[disabled]::-moz-placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}

.textarea-disabled::placeholder,
.textarea:disabled::placeholder,
.textarea[disabled]::placeholder {
    color: hsl(var(--bc) / var(--tw-placeholder-opacity));
    --tw-placeholder-opacity: 0.2;
}

@keyframes toast-pop {
    0% {
        transform: scale(0.9);
        opacity: 0;
    }

    100% {
        transform: scale(1);
        opacity: 1;
    }
}

.drawer-open>.drawer-toggle {
    display: none;
}

.drawer-open>.drawer-toggle~.drawer-side {
    pointer-events: auto;
    visibility: visible;
    position: sticky;
    display: block;
    width: auto;
    overscroll-behavior: auto;
}

.drawer-open>.drawer-toggle~.drawer-side>*:not(.drawer-overlay) {
    transform: translateX(0%);
}

[dir="rtl"] .drawer-open>.drawer-toggle~.drawer-side>*:not(.drawer-overlay) {
    transform: translateX(0%);
}

.drawer-open>.drawer-toggle:checked~.drawer-side {
    pointer-events: auto;
    visibility: visible;
}

.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--su) / var(--tw-bg-opacity));
    outline-style: solid;
    outline-width: 2px;
    outline-color: hsl(var(--b1) / 1);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
}

.avatar.offline:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b3) / var(--tw-bg-opacity));
    outline-style: solid;
    outline-width: 2px;
    outline-color: hsl(var(--b1) / 1);
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%;
}

.btn-group .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.btn-group .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0;
}

.btn-group .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}

.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.btn-group-horizontal .btn:first-child:not(:last-child) {
    margin-left: -1px;
    margin-top: -0px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: 0;
}

.btn-group-horizontal .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}

.btn-group-vertical .btn:first-child:not(:last-child) {
    margin-left: -0px;
    margin-top: -1px;
    border-top-left-radius: var(--rounded-btn, 0.5rem);
    border-top-right-radius: var(--rounded-btn, 0.5rem);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.btn-group-vertical .btn:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-left-radius: var(--rounded-btn, 0.5rem);
    border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}

.drawer-open>.drawer-toggle~.drawer-side>.drawer-overlay {
    cursor: default;
    background-color: transparent;
}

.tab-button.active {
    --tw-bg-opacity: 1;
    background-color: rgb(254 215 170 / var(--tw-bg-opacity));
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.menu li a:hover {
    border-radius: 0px;
    background-color: transparent;
}

.menu li>*:not(ul):not(.menu-title):not(details):active {
    border-radius: 0px;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.menu li details summary:hover {
    border-radius: 0px;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.menu li details summary:active {
    border-radius: 0px;
    background-color: transparent;
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.pointer-events-none {
    pointer-events: none;
}

.collapse {
    visibility: collapse;
}

.static {
    position: static;
}

.fixed {
    position: fixed;
}

.absolute {
    position: absolute;
}

.relative {
    position: relative;
}

.inset-0 {
    inset: 0px;
}

.inset-y-0 {
    top: 0px;
    bottom: 0px;
}

.-top-6 {
    top: -1.5rem;
}

.bottom-0 {
    bottom: 0px;
}

.bottom-10 {
    bottom: 2.5rem;
}

.bottom-5 {
    bottom: 1.25rem;
}

.left-0 {
    left: 0px;
}

.left-1\/2 {
    left: 50%;
}

.right-0 {
    right: 0px;
}

.right-10 {
    right: 2.5rem;
}

.right-5 {
    right: 1.25rem;
}

.top-0 {
    top: 0px;
}

.top-10 {
    top: 2.5rem;
}

.top-5 {
    top: 1.25rem;
}

.top-8 {
    top: 2rem;
}

.top-3 {
    top: 0.75rem;
}

.left-5 {
    left: 1.25rem;
}

.top-2 {
    top: 0.5rem;
}

.top-1 {
    top: 0.25rem;
}

.bottom-3 {
    bottom: 0.75rem;
}

.bottom-1 {
    bottom: 0.25rem;
}

.z-10 {
    z-index: 10;
}

.z-50 {
    z-index: 50;
}

.order-1 {
    order: 1;
}

.order-2 {
    order: 2;
}

.col-span-12 {
    grid-column: span 12 / span 12;
}

.m-0 {
    margin: 0px;
}

.mx-2 {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
}

.mx-4 {
    margin-left: 1rem;
    margin-right: 1rem;
}

.mx-8 {
    margin-left: 2rem;
    margin-right: 2rem;
}

.mx-auto {
    margin-left: auto;
    margin-right: auto;
}

.my-0 {
    margin-top: 0px;
    margin-bottom: 0px;
}

.my-0\.5 {
    margin-top: 0.125rem;
    margin-bottom: 0.125rem;
}

.my-16 {
    margin-top: 4rem;
    margin-bottom: 4rem;
}

.my-4 {
    margin-top: 1rem;
    margin-bottom: 1rem;
}

.my-6 {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
}

.-mb-8 {
    margin-bottom: -2rem;
}

.-ml-8 {
    margin-left: -2rem;
}

.-ml-px {
    margin-left: -1px;
}

.-mt-72 {
    margin-top: -18rem;
}

.mb-10 {
    margin-bottom: 2.5rem;
}

.mb-12 {
    margin-bottom: 3rem;
}

.mb-14 {
    margin-bottom: 3.5rem;
}

.mb-16 {
    margin-bottom: 4rem;
}

.mb-2 {
    margin-bottom: 0.5rem;
}

.mb-24 {
    margin-bottom: 6rem;
}

.mb-32 {
    margin-bottom: 8rem;
}

.mb-4 {
    margin-bottom: 1rem;
}

.mb-5 {
    margin-bottom: 1.25rem;
}

.mb-6 {
    margin-bottom: 1.5rem;
}

.mb-8 {
    margin-bottom: 2rem;
}

.ml-2 {
    margin-left: 0.5rem;
}

.ml-4 {
    margin-left: 1rem;
}

.mr-1 {
    margin-right: 0.25rem;
}

.mr-2 {
    margin-right: 0.5rem;
}

.mt-1 {
    margin-top: 0.25rem;
}

.mt-2 {
    margin-top: 0.5rem;
}

.mt-4 {
    margin-top: 1rem;
}

.mt-5 {
    margin-top: 1.25rem;
}

.mt-6 {
    margin-top: 1.5rem;
}

.mt-8 {
    margin-top: 2rem;
}

.inline-block {
    display: inline-block;
}

.flex {
    display: flex;
}

.inline-flex {
    display: inline-flex;
}

.flow-root {
    display: flow-root;
}

.grid {
    display: grid;
}

.hidden {
    display: none;
}

.h-1 {
    height: 0.25rem;
}

.h-1\.5 {
    height: 0.375rem;
}

.h-14 {
    height: 3.5rem;
}

.h-32 {
    height: 8rem;
}

.h-36 {
    height: 9rem;
}

.h-4 {
    height: 1rem;
}

.h-48 {
    height: 12rem;
}

.h-5 {
    height: 1.25rem;
}

.h-6 {
    height: 1.5rem;
}

.h-8 {
    height: 2rem;
}

.h-full {
    height: 100%;
}

.min-h-screen {
    min-height: 100vh;
}

.w-0 {
    width: 0px;
}

.w-0\.5 {
    width: 0.125rem;
}

.w-1\/2 {
    width: 50%;
}

.w-14 {
    width: 3.5rem;
}

.w-16 {
    width: 4rem;
}

.w-20 {
    width: 5rem;
}

.w-3\/4 {
    width: 75%;
}

.w-32 {
    width: 8rem;
}

.w-36 {
    width: 9rem;
}

.w-4 {
    width: 1rem;
}

.w-40 {
    width: 10rem;
}

.w-5 {
    width: 1.25rem;
}

.w-52 {
    width: 13rem;
}

.w-6 {
    width: 1.5rem;
}

.w-8 {
    width: 2rem;
}

.w-80 {
    width: 20rem;
}

.w-auto {
    width: auto;
}

.w-full {
    width: 100%;
}

.w-56 {
    width: 14rem;
}

.w-44 {
    width: 11rem;
}

.w-48 {
    width: 12rem;
}

.min-w-0 {
    min-width: 0px;
}

.max-w-2xl {
    max-width: 42rem;
}

.max-w-4xl {
    max-width: 56rem;
}

.max-w-md {
    max-width: 28rem;
}

.max-w-screen-md {
    max-width: 768px;
}

.max-w-screen-xl {
    max-width: 1280px;
}

.max-w-xl {
    max-width: 36rem;
}

.flex-1 {
    flex: 1 1 0%;
}

.rotate-0 {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-45 {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-skew-y-6 {
    --tw-skew-y: -6deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
    cursor: pointer;
}

.grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
}

.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-col {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.items-start {
    align-items: flex-start;
}

.items-end {
    align-items: flex-end;
}

.items-center {
    align-items: center;
}

.justify-start {
    justify-content: flex-start;
}

.justify-end {
    justify-content: flex-end;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

.gap-2 {
    gap: 0.5rem;
}

.gap-4 {
    gap: 1rem;
}

.gap-6 {
    gap: 1.5rem;
}

.gap-8 {
    gap: 2rem;
}

.gap-x-16 {
    -moz-column-gap: 4rem;
    column-gap: 4rem;
}

.gap-x-8 {
    -moz-column-gap: 2rem;
    column-gap: 2rem;
}

.gap-y-5 {
    row-gap: 1.25rem;
}

.space-x-1> :not([hidden])~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.25rem * var(--tw-space-x-reverse));
    margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-3> :not([hidden])~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.75rem * var(--tw-space-x-reverse));
    margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-4> :not([hidden])~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1rem * var(--tw-space-x-reverse));
    margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-4> :not([hidden])~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.divide-y> :not([hidden])~ :not([hidden]) {
    --tw-divide-y-reverse: 0;
    border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-gray-200> :not([hidden])~ :not([hidden]) {
    --tw-divide-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-divide-opacity));
}

.overflow-hidden {
    overflow: hidden;
}

.rounded-2xl {
    border-radius: 1rem;
}

.rounded-3xl {
    border-radius: 1.5rem;
}

.rounded-full {
    border-radius: 9999px;
}

.rounded-lg {
    border-radius: 0.5rem;
}

.rounded-xl {
    border-radius: 0.75rem;
}

.rounded-md {
    border-radius: 0.375rem;
}

.rounded-b-2xl {
    border-bottom-right-radius: 1rem;
    border-bottom-left-radius: 1rem;
}

.rounded-b-3xl {
    border-bottom-right-radius: 1.5rem;
    border-bottom-left-radius: 1.5rem;
}

.rounded-b-lg {
    border-bottom-right-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
}

.rounded-r-3xl {
    border-top-right-radius: 1.5rem;
    border-bottom-right-radius: 1.5rem;
}

.border {
    border-width: 1px;
}

.border-0 {
    border-width: 0px;
}

.border-y {
    border-top-width: 1px;
    border-bottom-width: 1px;
}

.border-b {
    border-bottom-width: 1px;
}

.border-dashed {
    border-style: dashed;
}

.border-dotted {
    border-style: dotted;
}

.border-gray-300 {
    --tw-border-opacity: 1;
    border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.border-gray-500 {
    --tw-border-opacity: 1;
    border-color: rgb(107 114 128 / var(--tw-border-opacity));
}

.border-orange-200 {
    --tw-border-opacity: 1;
    border-color: rgb(254 215 170 / var(--tw-border-opacity));
}

.bg-\[\#f5f1e4\] {
    --tw-bg-opacity: 1;
    background-color: rgb(245 241 228 / var(--tw-bg-opacity));
}

.bg-base-200 {
    --tw-bg-opacity: 1;
    background-color: hsl(var(--b2) / var(--tw-bg-opacity));
}

.bg-gray-100 {
    --tw-bg-opacity: 1;
    background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.bg-orange-100 {
    --tw-bg-opacity: 1;
    background-color: rgb(255 237 213 / var(--tw-bg-opacity));
}

.bg-orange-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(254 215 170 / var(--tw-bg-opacity));
}

.bg-stone-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(231 229 228 / var(--tw-bg-opacity));
}

.bg-stone-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(68 64 60 / var(--tw-bg-opacity));
}

.bg-stone-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(41 37 36 / var(--tw-bg-opacity));
}

.bg-stone-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(28 25 23 / var(--tw-bg-opacity));
}

.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-gradient-to-t {
    background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

.from-gray-800 {
    --tw-gradient-from: #1f2937 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(31 41 55 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-orange-100 {
    --tw-gradient-from: #ffedd5 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(255 237 213 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-stone-800 {
    --tw-gradient-from: #292524 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(41 37 36 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-transparent {
    --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), transparent var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.to-\[\#f5f1e4\] {
    --tw-gradient-to: #f5f1e4 var(--tw-gradient-to-position);
}

.to-transparent {
    --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

.bg-cover {
    background-size: cover;
}

.bg-no-repeat {
    background-repeat: no-repeat;
}

.fill-current {
    fill: currentColor;
}

.stroke-black {
    stroke: #000;
}

.object-cover {
    -o-object-fit: cover;
    object-fit: cover;
}

.object-center {
    -o-object-position: center;
    object-position: center;
}

.p-10 {
    padding: 2.5rem;
}

.p-2 {
    padding: 0.5rem;
}

.p-4 {
    padding: 1rem;
}

.p-6 {
    padding: 1.5rem;
}

.p-8 {
    padding: 2rem;
}

.px-1 {
    padding-left: 0.25rem;
    padding-right: 0.25rem;
}

.px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
}

.px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
}

.px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
}

.px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
}

.px-7 {
    padding-left: 1.75rem;
    padding-right: 1.75rem;
}

.px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
}

.py-0 {
    padding-top: 0px;
    padding-bottom: 0px;
}

.py-1 {
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
}

.py-10 {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
}

.py-14 {
    padding-top: 3.5rem;
    padding-bottom: 3.5rem;
}

.py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
}

.py-2\.5 {
    padding-top: 0.625rem;
    padding-bottom: 0.625rem;
}

.py-20 {
    padding-top: 5rem;
    padding-bottom: 5rem;
}

.py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
}

.py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
}

.py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
}

.pb-1 {
    padding-bottom: 0.25rem;
}

.pb-20 {
    padding-bottom: 5rem;
}

.pb-4 {
    padding-bottom: 1rem;
}

.pb-8 {
    padding-bottom: 2rem;
}

.pl-5 {
    padding-left: 1.25rem;
}

.pt-10 {
    padding-top: 2.5rem;
}

.pt-20 {
    padding-top: 5rem;
}

.pt-5 {
    padding-top: 1.25rem;
}

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}

.font-YekanBakh-Bold {
    font-family: YekanBakh-Bold;
}

.font-YekanBakh-ExtraBlack {
    font-family: YekanBakh-ExtraBlack;
}

.font-YekanBakh-ExtraBold {
    font-family: YekanBakh-ExtraBold;
}

.font-YekanBakh-Regular {
    font-family: YekanBakh-Regular;
}

.font-YekanBakh-SemiBold {
    font-family: YekanBakh-SemiBold;
}

.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
}

.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
}

.text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
}

.text-6xl {
    font-size: 3.75rem;
    line-height: 1;
}

.text-base {
    font-size: 1rem;
    line-height: 1.5rem;
}

.text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
}

.text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
}

.font-medium {
    font-weight: 500;
}

.leading-10 {
    line-height: 2.5rem;
}

.leading-6 {
    line-height: 1.5rem;
}

.leading-8 {
    line-height: 2rem;
}

.leading-none {
    line-height: 1;
}

.leading-relaxed {
    line-height: 1.625;
}

.text-base-content {
    --tw-text-opacity: 1;
    color: hsl(var(--bc) / var(--tw-text-opacity));
}

.text-gray-100 {
    --tw-text-opacity: 1;
    color: rgb(243 244 246 / var(--tw-text-opacity));
}

.text-gray-200 {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity));
}

.text-gray-500 {
    --tw-text-opacity: 1;
    color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity));
}

.text-gray-700 {
    --tw-text-opacity: 1;
    color: rgb(55 65 81 / var(--tw-text-opacity));
}

.text-gray-800 {
    --tw-text-opacity: 1;
    color: rgb(31 41 55 / var(--tw-text-opacity));
}

.text-gray-900 {
    --tw-text-opacity: 1;
    color: rgb(17 24 39 / var(--tw-text-opacity));
}

.text-orange-200 {
    --tw-text-opacity: 1;
    color: rgb(254 215 170 / var(--tw-text-opacity));
}

.text-orange-500 {
    --tw-text-opacity: 1;
    color: rgb(249 115 22 / var(--tw-text-opacity));
}

.text-slate-800 {
    --tw-text-opacity: 1;
    color: rgb(30 41 59 / var(--tw-text-opacity));
}

.text-stone-700 {
    --tw-text-opacity: 1;
    color: rgb(68 64 60 / var(--tw-text-opacity));
}

.text-stone-900 {
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-stone-500 {
    --tw-text-opacity: 1;
    color: rgb(120 113 108 / var(--tw-text-opacity));
}

.text-opacity-10 {
    --tw-text-opacity: 0.1;
}

.text-opacity-40 {
    --tw-text-opacity: 0.4;
}

.opacity-0 {
    opacity: 0;
}

.opacity-50 {
    opacity: 0.5;
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-8 {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-white {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}

.duration-300 {
    transition-duration: 300ms;
}

.ease-in-out {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-linear {
    transition-timing-function: linear;
}

@media (min-width: 1024px) {
    .lg\:menu-horizontal {
        display: inline-flex;
        flex-direction: row;
    }

    .lg\:menu-horizontal>li:not(.menu-title)>details>ul {
        position: absolute;
        margin-left: 0px;
        margin-top: 1rem;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-right: 0.5rem;
    }

    .lg\:menu-horizontal>li>details>ul:before {
        content: none;
    }

    :where(.lg\:menu-horizontal > li:not(.menu-title) > details > ul) {
        --tw-bg-opacity: 1;
        background-color: hsl(var(--b1) / var(--tw-bg-opacity));
        --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
        --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        border-radius: var(--rounded-box, 1rem);
    }
}

.placeholder\:text-sm::-moz-placeholder {
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.placeholder\:text-sm::placeholder {
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.after\:text-2xl::after {
    content: var(--tw-content);
    font-size: 1.5rem;
    line-height: 2rem;
}

.after\:text-sm::after {
    content: var(--tw-content);
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.after\:text-stone-900::after {
    content: var(--tw-content);
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.hover\:-translate-y-1:hover {
    --tw-translate-y: -0.25rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-110:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:border-b:hover {
    border-bottom-width: 1px;
}

.hover\:border-orange-200:hover {
    --tw-border-opacity: 1;
    border-color: rgb(254 215 170 / var(--tw-border-opacity));
}

.hover\:bg-orange-200:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(254 215 170 / var(--tw-bg-opacity));
}

.hover\:bg-stone-900:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(28 25 23 / var(--tw-bg-opacity));
}

.hover\:text-stone-900:hover {
    --tw-text-opacity: 1;
    color: rgb(28 25 23 / var(--tw-text-opacity));
}

.hover\:grayscale-0:hover {
    --tw-grayscale: grayscale(0);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.hover\:duration-300:hover {
    transition-duration: 300ms;
}

.focus\:outline-none:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.focus\:ring-2:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-gray-500:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(107 114 128 / var(--tw-ring-opacity));
}

.focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
}

.group\/item:hover .group-hover\/item\:my-3 {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
}

.group:hover .group-hover\:scale-110 {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group\/item:hover .group-hover\/item\:opacity-100 {
    opacity: 1;
}

@media (min-width: 640px) {
    .sm\:col-span-6 {
        grid-column: span 6 / span 6;
    }

    .sm\:mx-auto {
        margin-left: auto;
        margin-right: auto;
    }

    .sm\:-mt-32 {
        margin-top: -8rem;
    }

    .sm\:mr-10 {
        margin-right: 2.5rem;
    }

    .sm\:block {
        display: block;
    }

    .sm\:max-w-3xl {
        max-width: 48rem;
    }

    .sm\:max-w-sm {
        max-width: 24rem;
    }

    .sm\:-rotate-6 {
        --tw-rotate: -6deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }

    .sm\:skew-y-0 {
        --tw-skew-y: 0deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }

    .sm\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .sm\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .sm\:flex-nowrap {
        flex-wrap: nowrap;
    }

    .sm\:rounded-3xl {
        border-radius: 1.5rem;
    }

    .sm\:p-14 {
        padding: 3.5rem;
    }

    .sm\:px-0 {
        padding-left: 0px;
        padding-right: 0px;
    }

    .sm\:px-12 {
        padding-left: 3rem;
        padding-right: 3rem;
    }

    .sm\:py-12 {
        padding-top: 3rem;
        padding-bottom: 3rem;
    }

    .sm\:py-16 {
        padding-top: 4rem;
        padding-bottom: 4rem;
    }

    .sm\:text-center {
        text-align: center;
    }

    .sm\:text-lg {
        font-size: 1.125rem;
        line-height: 1.75rem;
    }

    .sm\:leading-7 {
        line-height: 1.75rem;
    }
}

@media (min-width: 768px) {
    .md\:col-span-2 {
        grid-column: span 2 / span 2;
    }

    .md\:col-span-4 {
        grid-column: span 4 / span 4;
    }

    .md\:col-span-5 {
        grid-column: span 5 / span 5;
    }

    .md\:col-span-7 {
        grid-column: span 7 / span 7;
    }

    .md\:mb-0 {
        margin-bottom: 0px;
    }

    .md\:ml-auto {
        margin-left: auto;
    }

    .md\:mt-0 {
        margin-top: 0px;
    }

    .md\:flex {
        display: flex;
    }

    .md\:h-72 {
        height: 18rem;
    }

    .md\:w-1\/2 {
        width: 50%;
    }

    .md\:rotate-45 {
        --tw-rotate: 45deg;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    }

    .md\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .md\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .md\:flex-row {
        flex-direction: row;
    }

    .md\:space-x-2> :not([hidden])~ :not([hidden]) {
        --tw-space-x-reverse: 0;
        margin-right: calc(0.5rem * var(--tw-space-x-reverse));
        margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
    }

    .md\:text-center {
        text-align: center;
    }
}

@media (min-width: 1024px) {
    .lg\:bottom-2 {
        bottom: 0.5rem;
    }

    .lg\:order-1 {
        order: 1;
    }

    .lg\:order-2 {
        order: 2;
    }

    .lg\:col-span-2 {
        grid-column: span 2 / span 2;
    }

    .lg\:col-span-3 {
        grid-column: span 3 / span 3;
    }

    .lg\:col-span-4 {
        grid-column: span 4 / span 4;
    }

    .lg\:col-span-5 {
        grid-column: span 5 / span 5;
    }

    .lg\:col-span-7 {
        grid-column: span 7 / span 7;
    }

    .lg\:col-span-8 {
        grid-column: span 8 / span 8;
    }

    .lg\:mt-0 {
        margin-top: 0px;
    }

    .lg\:block {
        display: block;
    }

    .lg\:hidden {
        display: none;
    }

    .lg\:h-\[28\.4rem\] {
        height: 28.4rem;
    }

    .lg\:w-1\/2 {
        width: 50%;
    }

    .lg\:w-1\/3 {
        width: 33.333333%;
    }

    .lg\:w-2\/3 {
        width: 66.666667%;
    }

    .lg\:w-96 {
        width: 24rem;
    }

    .lg\:max-w-7xl {
        max-width: 80rem;
    }

    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .lg\:grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    .lg\:gap-4 {
        gap: 1rem;
    }

    .lg\:px-0 {
        padding-left: 0px;
        padding-right: 0px;
    }

    .lg\:pl-10 {
        padding-left: 2.5rem;
    }

    .lg\:pt-10 {
        padding-top: 2.5rem;
    }
}